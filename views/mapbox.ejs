<% include partials/header %>



	<h1>Mapbox testing</h1>
	<div id='map' style='width: 100%; height: 800px;'></div>
	<hr/>

	<hr/>

	<%= dl %>

	<script type="text/javascript">
		
		$(document).ready(function(){

			// var dataSet = {
			// 	d: JSON.parse(<%=dl%>)
			// };
			// console.log(JSON.parse('"'+<%=dl%>+'"'));

			
			var messages = <%-JSON.stringify(dl)%>;
			// console.log(messages);
			var msgO = JSON.parse(messages);
			console.log(msgO[0]);
			console.log(msgO.length);

			function generateCoord(c) {
				var lat = c[1];
				var lng = c[0];

				var leftTop = [lng, lat];
				var rightTop = [lng+0.002, lat];
				var rightDown = [lng+0.002, lat-0.002];
				var leftDown = [lng, lat-0.002];
				return [leftTop, rightTop, rightDown, leftDown];
			}
			console.log(generateCoord([msgO[0].lat, msgO[0].lon]));


			//mapbox 
			mapboxgl.accessToken = 'pk.eyJ1IjoieXVudGFvdyIsImEiOiJjamxqYmphZXcwYThzM3BvYTF4b2h5bDg3In0.8yAFnp1ye4odiwsvOxOi7w';
			var map = new mapboxgl.Map({
			    container: 'map',
			    // style: 'mapbox://styles/mapbox/streets-v9',
			    style: 'mapbox://styles/mapbox/light-v9',
			    center: [144.9631, -37.8136],
			    zoom: 11,
			    pitch: 60,
    			bearing: -30,
			});

			map.on('load', function() {
				console.log("map loaded");
				// Insert the layer beneath any symbol layer.
			    var layers = map.getStyle().layers;

			    var labelLayerId;
			    for (var i = 0; i < layers.length; i++) {
			        if (layers[i].type === 'symbol' && layers[i].layout['text-field']) {
			            labelLayerId = layers[i].id;
			            break;
			        }
			    }

			    /*
				map.addLayer({
			        'id': '3d-buildings',
			        'source': 'composite',
			        'source-layer': 'building',
			        'filter': ['==', 'extrude', 'true'],
			        'type': 'fill-extrusion',
			        'minzoom': 15,
			        'paint': {
			            'fill-extrusion-color': '#aaa',

			            // use an 'interpolate' expression to add a smooth transition effect to the
			            // buildings as the user zooms in
			            'fill-extrusion-height': [
			                "interpolate", ["linear"], ["zoom"],
			                15, 0,
			                15.05, ["get", "height"]
			            ],
			            'fill-extrusion-base': [
			                "interpolate", ["linear"], ["zoom"],
			                15, 0,
			                15.05, ["get", "min_height"]
			            ],
			            'fill-extrusion-opacity': .6
			        }
			    }, labelLayerId);
			    */

				//add cat image
				/*
				map.loadImage('https://upload.wikimedia.org/wikipedia/commons/thumb/6/60/Cat_silhouette.svg/400px-Cat_silhouette.svg.png', function(error, image) {
			        if (error) throw error;
			        map.addImage('cat', image);
			        map.addLayer({
			            "id": "points",
			            "type": "symbol",
			            "source": {
			                "type": "geojson",
			                "data": {
			                    "type": "FeatureCollection",
			                    "features": [{
			                        "type": "Feature",
			                        "geometry": {
			                            "type": "Point",
			                            "coordinates": [144.9631, -37.8136]
			                        }
			                    }]
			                }
			            },
			            "layout": {
			                
			            }
			        });
			    });
			    */


				//add polygon 
				/*
				map.addLayer({
			        'id': 'population',
			        'type': 'fill-extrusion',
			        'source': {
			            "type": "geojson",
		                "data": {
		                    "type": "FeatureCollection",
		                    "features": [{
		                        "type": "Feature",
		                        "geometry": {
		                            "type": "Polygon",
		                            "coordinates": [[
		                            	[144.9631, -37.8131],
		                            	[144.9651, -37.8131],
		                            	[144.9651, -37.8151],
		                            	[144.9631, -37.8151]
		                            ]]
		                        }
		                    }]
		                }
			        },
			        'minzoom': 8,
			        'paint': {
			            'fill-extrusion-color': '#FF0000',
			            'fill-extrusion-height': 6000,
			            'fill-extrusion-base': 10,
			            'fill-extrusion-opacity': .6
			        }
			    });
			    */

			    for (var i = 0; i < 20/*msgO.length*/; i++) {
			    	var l = generateCoord([msgO[i].lat, msgO[i].lon]);
			    	map.addLayer({
				        'id': 'population-' + i,
				        'type': 'fill-extrusion',
				        'source': {
				            "type": "geojson",
			                "data": {
			                    "type": "FeatureCollection",
			                    "features": [{
			                        "type": "Feature",
			                        "geometry": {
			                            "type": "Polygon",
			                            "coordinates": [[
			                            	// generateCoord([msgO[0].lat, msgO[0].lon])
			                            	l[0],
			                            	l[1],
			                            	l[2],
			                            	l[3]
			                            ]]
			                        }
			                    }]
			                }
				        },
				        'minzoom': 8,
				        'paint': {
				            'fill-extrusion-color': '#FF0000',
				            'fill-extrusion-height': msgO[i].ScanOn * 2000,
				            'fill-extrusion-base': 10,
				            'fill-extrusion-opacity': .6
				        }
				    });
			    }

			})

		})

	</script>

<% include partials/footer %>